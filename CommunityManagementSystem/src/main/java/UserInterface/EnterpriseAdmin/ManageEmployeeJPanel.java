/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EnterpriseAdmin;

import Business.Employee.Employee;
import Business.Enterprise.CovidHelpEnterprise;
import Business.Enterprise.EmergencyResponseEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.GrievanceManagementEnterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Role.DoctorRole;
import Business.Role.FireControlEmployeeRole;
import Business.Role.FireControlManagerRole;
import Business.Role.GarbageRemovalManRole;
import Business.Role.GarbageRemovalManagerRole;
import Business.Role.GovernmentOrganizationManagerRole;
import Business.Role.HospitalManagerRole;
import Business.Role.NonGovernmentOrganizationManagerRole;
import Business.Role.PoliceDepartmentHeadRole;
import Business.Role.PoliceManRole;
import Business.Role.Role;
import Business.Role.StreetLightMaintenanceManagerRole;
import Business.Role.StreetLightingMaintenanceEmpRole;
import Business.Role.WaterSupplierRole;
import Business.Role.WaterSupplyManagerRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ManageEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeeJPanel
     */

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    DefaultTableModel model;
   
    
    public ManageEmployeeJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        //this.organizationDirectory = organizationDirectory;
        this.enterprise = enterprise;
        model = (DefaultTableModel) tableEmployee.getModel();
        populateOrganizationEmployeeComboBox();
        populateEmployeeRoleComboBox();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orgEmpRoleComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        orgTypeComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmployee = new javax.swing.JTable();
        btnAddEmployee = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtEmpName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblValidUser = new javax.swing.JLabel();
        lblValidPassword = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Employee Type");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Organization");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Username");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("Password");

        tableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization", "Employee Role", "Name", "Username", "Password"
            }
        ));
        jScrollPane1.setViewportView(tableEmployee);

        btnAddEmployee.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        btnAddEmployee.setText("Save");
        btnAddEmployee.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmployeeActionPerformed(evt);
            }
        });

        btnBack.setIcon(new javax.swing.ImageIcon("/Users/suprajakosuri/Desktop/Supraja AED_Final_Git_/AED-final-project/Images/icons8-go-back-48.png")); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Employee Name");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 102));
        jLabel6.setText("Manage Employee");

        jLabel7.setIcon(new javax.swing.ImageIcon("/Users/suprajakosuri/Desktop/Supraja AED_Final_Git_/AED-final-project/Images/WhatsApp Image 2022-04-30 at 5.38.24 PM.jpeg")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel1))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(101, 101, 101)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(orgEmpRoleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(orgTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtEmpName)
                                            .addComponent(txtUser)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(btnAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblValidPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 362, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblValidUser, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnBack)
                                        .addGap(91, 91, 91)))
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(713, 713, 713)))
                .addComponent(lblValidPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orgTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orgEmpRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValidUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(btnAddEmployee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 189, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmployeeActionPerformed
        
        Organization organization = (Organization) orgTypeComboBox.getSelectedItem();
        
        UserAccountDirectory useraccountdirectory = organization.getUserAccountDirectory();
        String name = txtEmpName.getText();

        String username = txtUser.getText();
        String password = String.valueOf(txtPassword.getPassword());

        String empRole = orgEmpRoleComboBox.getSelectedItem().toString();
        
        int n = 0;
        Role role = null;
        
        switch (empRole) {
            
            case "GarbageRemovalMan":
                
                n = 2;
                role = new GarbageRemovalManRole();
                break;
            
            case "GarbageRemovalOrganizationManager":
                
                n = 3;
                role = new GarbageRemovalManagerRole();
                break;
                
            case "WaterSupplier":
                
                n = 4;
                role = new WaterSupplierRole();
                break;
                
            case "WaterSupplyOrganizationManager":
                
                n = 5;
                role = new WaterSupplyManagerRole();
                break;
                
            case "StreetLightingTechnician":
                
                n = 6;
                role = new StreetLightingMaintenanceEmpRole();
                break;
            
            case "StreetLightingOrganizationManager":
                
                n = 7;
                role = new StreetLightMaintenanceManagerRole();
                break;
                
            case "PoliceMan":
                
                n = 8;
                role = new PoliceManRole();
                break;
                
            case "PoliceDepartmentHead":
                
                n = 9;
                role = new PoliceDepartmentHeadRole();
                break;
                
            case "FireControlOrganizationEmployee":
                
                n = 10;
                role = new FireControlEmployeeRole();
                break;
                
            case "FireDepartmentHead":
                
                n = 11;
                role = new FireControlManagerRole();
                break;
                
            case "Doctor":
                
                n = 12;
                role = new DoctorRole();
                break;
                
            case "HospitalManager":
                
                n = 13;
                role = new HospitalManagerRole();
                break;
                
            case "NGOManager":
                
                n = 14;
                role = new NonGovernmentOrganizationManagerRole();
                break;
                
            case "GovernmentOrganizationManager":
                
                n = 15;
                role = new GovernmentOrganizationManagerRole();
                break;
                
        }
        
        for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            if(employee.getName().equals(name)){
                JOptionPane.showMessageDialog(null, "please input another name");
                return;
            }
        }
        
        ArrayList<String>usernamecheck = new ArrayList<>();
        for(UserAccount user: organization.getUserAccountDirectory().getUserAccountList())
        {
            usernamecheck.add(user.getUsername());
            
        }
        if(usernamecheck.contains(username))
        {
            JOptionPane.showMessageDialog(null,"UserName already exists");
            return;
        }
        if(username.isEmpty()||password.isEmpty())
        {
         JOptionPane.showMessageDialog(null,"Please enter a Valid input");
            return;   
        }
        
        if(!validUsername(username)){
            JOptionPane.showMessageDialog(null,"Please enter a Valid username");
            return; 
        }
        
        if(!validPassword(password)){
            JOptionPane.showMessageDialog(null,"Please enter a Valid password with more than 8 characters, 1 number, 1 capital letter and 1 special character");
            return; 
        }
        
       // System.out.println(role);
        Employee employee = organization.getEmployeeDirectory().createEmployee(name,n);

        //System.out.println(employee.getRole());
        UserAccount userAccount = organization.getUserAccountDirectory().createUserAccount(username, password, employee, role);

//        for (Organization organization1 : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
//            for (UserAccount userAccount1 : organization1.getUserAccountDirectory().getUserAccountList()) {
//                System.out.println(this.enterprise.getName() + organization.getName() + userAccount1.getUsername());
//            }
//        }
        populateTable();
        orgEmpRoleComboBox.setSelectedIndex(0);
        orgTypeComboBox.setSelectedIndex(0);
        txtEmpName.setText("");
        txtUser.setText("");
        txtPassword.setText("");
        
    }//GEN-LAST:event_btnAddEmployeeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
    public void populateEmployeeRoleComboBox() {
        
        orgEmpRoleComboBox.removeAllItems();

        if (this.enterprise instanceof GrievanceManagementEnterprise) {
           
            orgEmpRoleComboBox.addItem("GarbageRemovalMan");
            orgEmpRoleComboBox.addItem("GarbageRemovalOrganizationManager");
            orgEmpRoleComboBox.addItem("WaterSupplier");
            orgEmpRoleComboBox.addItem("WaterSupplyOrganizationManager");
            orgEmpRoleComboBox.addItem("StreetLightingTechnician");
            orgEmpRoleComboBox.addItem("StreetLightingOrganizationManager");
            orgEmpRoleComboBox.addItem("PoliceMan");
            orgEmpRoleComboBox.addItem("PoliceDepartmentHead");
        }
        if (this.enterprise instanceof EmergencyResponseEnterprise) {
            
            orgEmpRoleComboBox.addItem("Doctor");
            orgEmpRoleComboBox.addItem("HospitalManager");
            orgEmpRoleComboBox.addItem("FireControlOrganizationEmployee");
            orgEmpRoleComboBox.addItem("FireDepartmentHead");
            
        }
        if (this.enterprise instanceof CovidHelpEnterprise) {
            orgEmpRoleComboBox.addItem("NGOManager");
            orgEmpRoleComboBox.addItem("GovernmentOrganizationManager");
            
        }

    }

    public void populateOrganizationEmployeeComboBox() {
        
        orgTypeComboBox.removeAllItems();

        for (Organization organization : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            orgTypeComboBox.addItem(organization);
        }
    }
    
    private void populateTable() {
        

        model.setRowCount(0);
        for (Organization organization : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            System.out.println(organization + "org");
            for (UserAccount useraccount : organization.getUserAccountDirectory().getUserAccountList()) {
//                System.out.println(useraccount + "user");
//                System.out.println(useraccount.getEmployee().getOrg() + "org");
//                System.out.println(useraccount.getEmployee().getRole() + "role");
//                System.out.println(useraccount.getEmployee().getName() + "name");
//                System.out.println(useraccount.getUsername() + "username");
//                System.out.println(useraccount.getPassword() + "password");
//                
                Object[] objs = {useraccount.getEmployee().getOrg(), useraccount.getEmployee().getRole(),
                useraccount.getEmployee().getName(),useraccount.getUsername(),useraccount.getPassword()};
                        
                model.addRow(objs);
            }
        }

    }
    
    private void txtUserNameKeyTyped(java.awt.event.KeyEvent evt) {                                     
        
        if (!validUsername(txtUser.getText())) {
            txtUser.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtUser.setForeground(Color.RED);
            lblValidUser.setText("Invalid UserName..Only letters allowed");
        } else {
            txtUser.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            txtUser.setForeground(Color.BLACK);
            lblValidUser.setText("Valid UserName");
            int delay = 3000; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    lblValidUser.setVisible(false);
                }  
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }                                    

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {                                     
        
        if (!validPassword(txtPassword.getText())) {
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtPassword.setForeground(Color.RED);
            lblValidPassword.setText("8 characters, atleast 1 capital letter, one number, one special character");
            
        } else {
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            txtPassword.setForeground(Color.BLACK);
            lblValidPassword.setText("Valid Password");
            int delay = 3000; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    lblValidPassword.setVisible(false);
                    
                }  
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }                                    

    public static boolean validUsername(String name) {
        Pattern pattern;
        Matcher matcher;
        String NAME_PATTERN = "^[A-Za-z\\s]+$";
        pattern = Pattern.compile(NAME_PATTERN);
        matcher = pattern.matcher(name);
        return matcher.matches();
    }
        

    public static boolean validPassword(String passwordValue) {
        Pattern pattern;
        Matcher matcher;
        String PASSWORD_PATTERN
                = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=~|?])(?=\\S+$).{8,}$";
        pattern = Pattern.compile(PASSWORD_PATTERN);
        matcher = pattern.matcher(passwordValue);
        return matcher.matches();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblValidPassword;
    private javax.swing.JLabel lblValidUser;
    private javax.swing.JComboBox orgEmpRoleComboBox;
    private javax.swing.JComboBox orgTypeComboBox;
    private javax.swing.JTable tableEmployee;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
