/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Resident;


import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.CovidHelp;
import static Business.Enterprise.Enterprise.EnterpriseType.EmergencyResponse;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Complaint;
import Business.WorkQueue.HelpRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class RequestHelpJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestHelpJPanel
     */
    private JPanel userProcessContainer;
    private Network network ;
    private UserAccount userAccount;
    DefaultTableModel dtm;
    
    public RequestHelpJPanel(JPanel userProcessContainer,UserAccount userAccount, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network=network;
        this.userAccount = userAccount;
        dtm = (DefaultTableModel) tblRequestHelp.getModel();
        populateOrganizations();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboRequestHelpFrom = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtBankNumber = new javax.swing.JTextField();
        btnRaiseHelpRequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtcomments = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestHelp = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("  Request help");

        jLabel6.setText("Request help from");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Comments");

        jLabel8.setText("Amount");

        jLabel9.setText("Bank Account number");

        btnRaiseHelpRequest.setBackground(new java.awt.Color(204, 255, 255));
        btnRaiseHelpRequest.setText("Raise Help Request");
        btnRaiseHelpRequest.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnRaiseHelpRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseHelpRequestActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(204, 255, 255));
        btnBack.setText("back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtcomments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcommentsActionPerformed(evt);
            }
        });

        tblRequestHelp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Help from", "Comments", "Amount", "Bank Account number", "Status", "Request Date", "Resolve Date"
            }
        ));
        jScrollPane1.setViewportView(tblRequestHelp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel6)))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboRequestHelpFrom, 0, 205, Short.MAX_VALUE)
                            .addComponent(txtcomments)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBankNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(426, 426, 426)
                        .addComponent(btnRaiseHelpRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboRequestHelpFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtcomments, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBankNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(51, 51, 51)
                .addComponent(btnRaiseHelpRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtcommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcommentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcommentsActionPerformed

    private void btnRaiseHelpRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseHelpRequestActionPerformed
        // TODO add your handling code here:
        
        Organization requestHelpFrom = (Organization) comboRequestHelpFrom.getSelectedItem();
        
        String helpComments = txtcomments.getText();
        
        String amount = txtAmount.getText();
        String bankAccountNumber = txtBankNumber.getText();
        
        if (!validAccount(bankAccountNumber))
        {
            JOptionPane.showMessageDialog(null, "Invalid account number");
            return;
        }
        
        double doubleAmount = Double.parseDouble(amount);
        
        HelpRequest helpRequest = new HelpRequest();
        helpRequest.setOrganizationType(requestHelpFrom.toString());
        helpRequest.setHelpComments(helpComments);
        helpRequest.setAmount(doubleAmount);
        helpRequest.setAccountNumber(bankAccountNumber);
        helpRequest.setSender(userAccount);
        helpRequest.setRequestDate(new Date());
        helpRequest.setStatus("Amount requested");
        helpRequest.setRequestType("CovidHelp");

        userAccount.getWorkQueue().addWorkRequest(helpRequest);
        
        requestHelpFrom.getWorkQueue().addWorkRequest(helpRequest);
        
        
        populateTable();
       
        JOptionPane.showMessageDialog(this, "Request for amount placed successfully !!", "Request", 1);
        comboRequestHelpFrom.setSelectedIndex(0);
        txtAmount.setText("");
        txtBankNumber.setText("");
        txtcomments.setText("");
        
    }//GEN-LAST:event_btnRaiseHelpRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRaiseHelpRequest;
    private javax.swing.JComboBox comboRequestHelpFrom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequestHelp;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBankNumber;
    private javax.swing.JTextField txtcomments;
    // End of variables declaration//GEN-END:variables

    private void populateOrganizations() {
         for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getEnterpriseType().equals(CovidHelp)){
                for(Organization org : e.organizationDirectory.getOrganizationList()){
                    comboRequestHelpFrom.addItem(org);
                }
                
            }
        }
    }
    public Boolean validAccount(String ID) {
        String regex = "^([0-9]{12})$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(ID);
        if(matcher.matches()){  
            return true;
        }
       return false; 
    }
    private void populateTable() {
        
        dtm.setRowCount(0);
  
        WorkQueue workQueue = userAccount.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
           if(workRequest.getRequestType().equalsIgnoreCase("CovidHelp"))
            {
                HelpRequest helpRequest = (HelpRequest) workRequest;
                
                Date date = null;
                if(helpRequest.getStatus().equalsIgnoreCase("Money sent successfully")) {
                      date = helpRequest.getResolveDate();
                }

                Object[] objs = {helpRequest.getOrganizationType(),helpRequest.getHelpComments(),helpRequest.getAmount(),helpRequest.getAccountNumber(),helpRequest.getStatus(), helpRequest.getRequestDate(),date};
                dtm.addRow(objs);

            }
        }
    }
}
