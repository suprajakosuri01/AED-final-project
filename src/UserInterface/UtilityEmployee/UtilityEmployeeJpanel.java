/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.UtilityEmployee;

import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Complaint;
import Business.WorkQueue.WorkAppeal;
import Business.WorkQueue.WorkQueue;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vivek
 */
public class UtilityEmployeeJpanel extends javax.swing.JPanel {

    /**
     * Creates new form UtilityEmployeeJpanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
     DefaultTableModel dtm;
    int row,col;
    public UtilityEmployeeJpanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        lblutilityemp.setText("Welcome employee " + userAccount.getEmployee().getName() + ", please process the request in " + userAccount.getEmployee().getOrg() + " org");
        dtm = (DefaultTableModel) tblUtilityEmployee.getModel();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUtilityEmployee = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lblutilityemp = new javax.swing.JLabel();

        tblUtilityEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(tblUtilityEmployee);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lblutilityemp.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(lblutilityemp, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(173, 173, 173))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblutilityemp, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        row = tblUtilityEmployee.getSelectedRow();
        if (row < 0){
            return;
        }
        
        Complaint complaint = (Complaint) userAccount.getWorkQueue().getListOfWorkQueues().get(row);
         if (dtm.getValueAt(row, 3).toString().equalsIgnoreCase("Employee On the way"))
            {
                JOptionPane.showMessageDialog(this,"Complaint already accepted by the employee", "Complaint already accepted", 2);
            }
        

         else complaint.setStatus("Employee On the way");
        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         row = tblUtilityEmployee.getSelectedRow();
        
        if (dtm.getValueAt(row, 3).toString().equalsIgnoreCase("Assigned Employee"))
        {
            JOptionPane.showMessageDialog(this,"Please accept the complaint before processing", "Complaint not accepted", 2);
        }
        
        else if(dtm.getValueAt(row, 3).toString().equalsIgnoreCase("Employee On the way"))
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Complaint Resolved ? ", "Complaint resolved", dialogButton);
            if (dialogResult == 0)
            {
                
                WorkQueue workQueue = userAccount.getWorkQueue();
                Complaint complaint = (Complaint)workQueue.getListOfWorkQueues().get(row);
                complaint.setStatus("Complaint Resolved");
                
                complaint.setResolveDate(new Date());
                populateTable();
                JOptionPane.showMessageDialog(this, "Complaint resolved sucessfuly","Complaint resolved",1);
            }
           
        }
        
        else if (dtm.getValueAt(row, 3).toString().equalsIgnoreCase("Complaint Resolved"))
        {
            JOptionPane.showMessageDialog(this,"Complaint is already resolved", "Complaint resolved", 2);
        }
    }                                          

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
       
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblutilityemp;
    private javax.swing.JTable tblUtilityEmployee;
    // End of variables declaration//GEN-END:variables
 private void populateTable() {
      dtm.setRowCount(0);
  
        WorkQueue workQueue = userAccount.getWorkQueue();
        
        for(WorkAppeal WorkAppeal  : workQueue.getListOfWorkQueues() ){
            Complaint complaint = (Complaint) WorkAppeal;
            
            String receiver = "Not yet Assigned"; 
            if( complaint.getReceiver() != null)
                receiver = complaint.getReceiver().getEmployee().getName();
            
            Date date = null;
       
            if(complaint.getStatus().equalsIgnoreCase("Complaint Resolved")) {
                  date = complaint.getResolveDate();
            }
            
            Object[] objs = {complaint.getSender().getResident().getName(),complaint.getPriority(), complaint.getMessage(), complaint.getStatus(),complaint.getRequestDate(),date};
            dtm.addRow(objs);
            
        }
    }




}
