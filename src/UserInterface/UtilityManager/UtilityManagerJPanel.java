/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.UtilityManager;

import Business.Organization.Organization;
import Business.Role.DrinkingWaterSupplyWorker;
import Business.Role.ElectricityMaintainanceEmployeeRole;
import Business.Role.SecurityGuardRole;
import Business.Role.TrashRemovalManRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Complaint;
import Business.WorkQueue.WorkAppeal;
import Business.WorkQueue.WorkQueue;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adepu
 */
public class UtilityManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UtilityComplaintSuperviso
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    DefaultTableModel dtm;
    int row,col;
    
    public UtilityManagerJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        UtilityMngJlbl.setText("Welcome Manager " + userAccount.getEmployee().getName() + ", please manage resident requests !!");
        dtm = (DefaultTableModel) TblOrganizationManager.getModel();
        displayEmployes();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UtilityMngJlbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblOrganizationManager = new javax.swing.JTable();
        ComboUtilityEmpLoyee = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        UtilityMngJlbl.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        UtilityMngJlbl.setText("UTILITY COMPLAINT MANAGER");

        TblOrganizationManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Resident Name", "Priority", "Status", "Message", "Employee", "RequestDate", "Resolve Date"
            }
        ));
        jScrollPane1.setViewportView(TblOrganizationManager);

        ComboUtilityEmpLoyee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboUtilityEmpLoyee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboUtilityEmpLoyeeActionPerformed(evt);
            }
        });

        jLabel2.setText("ASSIGN EMPLOYEE");

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Decline");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Assign");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(UtilityMngJlbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 135, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(59, 59, 59))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(ComboUtilityEmpLoyee, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(120, 120, 120))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(98, 98, 98)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(450, 450, 450)
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UtilityMngJlbl)
                    .addComponent(jButton4))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboUtilityEmpLoyee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3))
                .addGap(130, 130, 130))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String currentStatus = dtm.getValueAt(row, 3).toString();
        
        if(currentStatus.equalsIgnoreCase("Complaint raised"))
        {
            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Complaint Accepted");          
            JOptionPane.showMessageDialog(this, "Complaint is Accepted", " Complaint Accepted", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already accepted", " Complaint Accepted", 1);
            
        }
        
        populateTable();
       
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        row = TblOrganizationManager.getSelectedRow();
        String currentStatus = dtm.getValueAt(row, 3).toString();
        if(currentStatus.equalsIgnoreCase("Complaint raised"))
        {
            userAccount.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Comlplaint Declined");
    
        }
         else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already accepted", " Complaint Accepted", 1);
            
        }
        populateTable();     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         UserAccount grievanceEmployeee =  (UserAccount) ComboUtilityEmpLoyee.getSelectedItem();
        
        if(grievanceEmployeee.isEmployeeBusy())
        {
            
            JOptionPane.showMessageDialog(this, "Selected employee is busy please select other employee.", " Complaint not assigned", 1);
            return;
        }
        
        row = TblOrganizationManager.getSelectedRow();
        String currentStatus = dtm.getValueAt(row, 3).toString();
        
        Complaint complaint = (Complaint) organization.getWorkQueue().getListOfWorkQueues().get(row);
        
        if(!currentStatus.equalsIgnoreCase("Complaint Accepted"))
        {

            JOptionPane.showMessageDialog(this, "Please accept complaint to assign", " Complaint not accepted", 1);
           return;
        }
        if(currentStatus.equalsIgnoreCase("Complaint Accepted"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Assigned Employee");
            
          
            JOptionPane.showMessageDialog(this, "Complaint is Accepted and assigned to respective Employee", " Complaint is forwarded to employee", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already Assigend to Employee", " Complaint Accepted", 1);
            
        }
        complaint.setReceiver(grievanceEmployeee);
        complaint.setStatus("Assigned to Employee");
        grievanceEmployeee.getWorkQueue().addWorkAppeal(complaint);
        populateTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ComboUtilityEmpLoyeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboUtilityEmpLoyeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboUtilityEmpLoyeeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboUtilityEmpLoyee;
    private javax.swing.JTable TblOrganizationManager;
    private javax.swing.JLabel UtilityMngJlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
 private void populateTable() {
      dtm.setRowCount(0);
  
        WorkQueue workQueue = organization.getWorkQueue();
        
        for(WorkAppeal workAppeal  : workQueue.getListOfWorkQueues() ){
            Complaint complaint = (Complaint) workAppeal;
            
            String receiver = "Not yet Assigned"; 
            if( complaint.getReceiver() != null)
                receiver = complaint.getReceiver().getEmployee().getName();
            
            Date date = null;
       
            if(complaint.getStatus().equalsIgnoreCase("Complaint Resolved")) {
                  date = complaint.getResolveDate();
            }

            Object[] objs = {complaint.getSender().getResident().getName(),complaint.getPriority(), complaint.getMessage(), complaint.getStatus(), receiver, complaint.getRequestDate(),date};
            dtm.addRow(objs);
            
        }
    }
        
        private void displayEmployes() {
                
            
                for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
                    if (userAccount.getRole() instanceof TrashRemovalManRole) ComboUtilityEmpLoyee.addItem(userAccount);
                    else if (userAccount.getRole() instanceof ElectricityMaintainanceEmployeeRole) ComboUtilityEmpLoyee.addItem(userAccount);
                    else if (userAccount.getRole() instanceof DrinkingWaterSupplyWorker) ComboUtilityEmpLoyee.addItem(userAccount);
                    else if (userAccount.getRole() instanceof SecurityGuardRole) ComboUtilityEmpLoyee.addItem(userAccount);
            }
        
        
        }



}
